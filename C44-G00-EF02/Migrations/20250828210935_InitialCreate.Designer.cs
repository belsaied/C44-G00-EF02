// <auto-generated />
using System;
using C44_G00_EF02.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C44_G00_EF02.Migrations
{
    [DbContext(typeof(ITIDbContext))]
    [Migration("20250828210935_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C44_G00_EF02.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Top_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Top_ID");

                    b.ToTable("Courses", null, t =>
                        {
                            t.HasCheckConstraint("CK_Course_Duration", "Duration > 0");
                        });
                });

            modelBuilder.Entity("C44_G00_EF02.Models.CourseInst", b =>
                {
                    b.Property<int>("Inst_ID")
                        .HasColumnType("int");

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<string>("Evaluate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Inst_ID", "Course_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("Course_Inst", (string)null);
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Ins_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Ins_ID")
                        .IsUnique()
                        .HasFilter("[Ins_ID] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Departments", null, t =>
                        {
                            t.HasCheckConstraint("CK_Department_HiringDate", "HiringDate <= GETDATE()");
                        });
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("HourRateBouns")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ID");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Instructors", null, t =>
                        {
                            t.HasCheckConstraint("CK_Instructor_HourRateBouns", "HourRateBouns >= 0");

                            t.HasCheckConstraint("CK_Instructor_Salary", "Salary > 0");
                        });
                });

            modelBuilder.Entity("C44_G00_EF02.Models.StudCourse", b =>
                {
                    b.Property<int>("Stud_ID")
                        .HasColumnType("int");

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Stud_ID", "Course_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("Stud_Course", (string)null);
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Dep_Id");

                    b.ToTable("Students", null, t =>
                        {
                            t.HasCheckConstraint("CK_Student_Age", "Age BETWEEN 18 AND 60");
                        });
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Topic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Topics", (string)null);
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Course", b =>
                {
                    b.HasOne("C44_G00_EF02.Models.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("Top_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.CourseInst", b =>
                {
                    b.HasOne("C44_G00_EF02.Models.Course", "Course")
                        .WithMany("CourseInstructors")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("C44_G00_EF02.Models.Instructor", "Instructor")
                        .WithMany("CourseInstructors")
                        .HasForeignKey("Inst_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Department", b =>
                {
                    b.HasOne("C44_G00_EF02.Models.Instructor", "Manager")
                        .WithOne("ManagedDepartment")
                        .HasForeignKey("C44_G00_EF02.Models.Department", "Ins_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Instructor", b =>
                {
                    b.HasOne("C44_G00_EF02.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("Dept_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.StudCourse", b =>
                {
                    b.HasOne("C44_G00_EF02.Models.Course", "Course")
                        .WithMany("StudCourses")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("C44_G00_EF02.Models.Student", "Student")
                        .WithMany("StudCourses")
                        .HasForeignKey("Stud_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Student", b =>
                {
                    b.HasOne("C44_G00_EF02.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("Dep_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Course", b =>
                {
                    b.Navigation("CourseInstructors");

                    b.Navigation("StudCourses");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Instructor", b =>
                {
                    b.Navigation("CourseInstructors");

                    b.Navigation("ManagedDepartment");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Student", b =>
                {
                    b.Navigation("StudCourses");
                });

            modelBuilder.Entity("C44_G00_EF02.Models.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
